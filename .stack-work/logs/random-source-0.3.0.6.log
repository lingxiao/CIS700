Configuring random-source-0.3.0.6...
Building random-source-0.3.0.6...
Preprocessing library random-source-0.3.0.6...
[ 1 of 11] Compiling Data.Random.Source.Internal.Prim ( src/Data/Random/Source/Internal/Prim.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.4.0/build/Data/Random/Source/Internal/Prim.o )
[ 2 of 11] Compiling Data.Random.Internal.Words ( src/Data/Random/Internal/Words.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.4.0/build/Data/Random/Internal/Words.o )
[ 3 of 11] Compiling Data.Random.Internal.Source ( src/Data/Random/Internal/Source.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.4.0/build/Data/Random/Internal/Source.o )
[ 4 of 11] Compiling Data.Random.Source.Internal.TH ( src/Data/Random/Source/Internal/TH.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.4.0/build/Data/Random/Source/Internal/TH.o )

src/Data/Random/Source/Internal/TH.hs:85:1: Warning:
    Defined but not used: ‘requireMethod’

src/Data/Random/Source/Internal/TH.hs:93:1: Warning:
    Defined but not used: ‘score’

src/Data/Random/Source/Internal/TH.hs:104:1: Warning:
    Defined but not used: ‘inline’

src/Data/Random/Source/Internal/TH.hs:107:1: Warning:
    Defined but not used: ‘noinline’

src/Data/Random/Source/Internal/TH.hs:110:1: Warning:
    Defined but not used: ‘replaceMethodName’
[ 5 of 11] Compiling Data.Random.Source.PureMT ( src/Data/Random/Source/PureMT.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.4.0/build/Data/Random/Source/PureMT.o )
[ 6 of 11] Compiling Data.Random.Source.Std ( src/Data/Random/Source/Std.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.4.0/build/Data/Random/Source/Std.o )
[ 7 of 11] Compiling Data.Random.Source.StdGen ( src/Data/Random/Source/StdGen.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.4.0/build/Data/Random/Source/StdGen.o )

src/Data/Random/Source/StdGen.hs:91:1: Warning:
    RULE left-hand side too complicated to desugar
      Optimised lhs: let {
                       $dApplicative_aN1T :: Applicative m
                       [LclId, Str=DmdType]
                       $dApplicative_aN1T = GHC.Base.$p1Monad @ m $dMonad_aLKM } in
                     let {
                       $dFunctor_aN1U :: Functor m
                       [LclId, Str=DmdType]
                       $dFunctor_aN1U =
                         GHC.Base.$p1Applicative @ m $dApplicative_aN1T } in
                     getRandomPrimFromRandomGenState
                       @ StdGen
                       @ (StateT StdGen m)
                       @ a
                       $dRandomGen_aLKQ
                       (Control.Monad.State.Class.$fMonadStatesStateT0
                          @ StdGen
                          @ m
                          (transformers-0.4.2.0:Control.Monad.Trans.State.Lazy.$fMonadStateT
                             @ StdGen
                             @ m
                             (transformers-0.4.2.0:Control.Monad.Trans.State.Lazy.$fApplicativeStateT
                                @ StdGen
                                @ m
                                (transformers-0.4.2.0:Control.Monad.Trans.State.Lazy.$fFunctorStateT
                                   @ StdGen @ m $dFunctor_aN1U)
                                $dFunctor_aN1U
                                $dMonad_aLKM)
                             $dMonad_aLKM)
                          $dMonad_aLKM)
      Orig lhs: let {
                  $dApplicative_aN1T :: Applicative m
                  [LclId, Str=DmdType]
                  $dApplicative_aN1T = GHC.Base.$p1Monad @ m $dMonad_aLKM } in
                let {
                  $dFunctor_aN1U :: Functor m
                  [LclId, Str=DmdType]
                  $dFunctor_aN1U =
                    GHC.Base.$p1Applicative @ m $dApplicative_aN1T } in
                let {
                  $dFunctor_aN1X :: Functor (StateT StdGen m)
                  [LclId, Str=DmdType]
                  $dFunctor_aN1X =
                    transformers-0.4.2.0:Control.Monad.Trans.State.Lazy.$fFunctorStateT
                      @ StdGen @ m $dFunctor_aN1U } in
                let {
                  $dApplicative_aN1W :: Applicative (StateT StdGen m)
                  [LclId, Str=DmdType]
                  $dApplicative_aN1W =
                    transformers-0.4.2.0:Control.Monad.Trans.State.Lazy.$fApplicativeStateT
                      @ StdGen @ m $dFunctor_aN1X $dFunctor_aN1U $dMonad_aLKM } in
                let {
                  $dMonad_aN1V :: Monad (StateT StdGen m)
                  [LclId, Str=DmdType]
                  $dMonad_aN1V =
                    transformers-0.4.2.0:Control.Monad.Trans.State.Lazy.$fMonadStateT
                      @ StdGen @ m $dApplicative_aN1W $dMonad_aLKM } in
                let {
                  $dMonadState_aLKR :: MonadState StdGen (StateT StdGen m)
                  [LclId, Str=DmdType]
                  $dMonadState_aLKR =
                    Control.Monad.State.Class.$fMonadStatesStateT0
                      @ StdGen @ m $dMonad_aN1V $dMonad_aLKM } in
                let {
                  $dRandomGen_aLKQ :: RandomGen StdGen
                  [LclId, Str=DmdType]
                  $dRandomGen_aLKQ = System.Random.$fRandomGenStdGen } in
                getRandomPrimFromRandomGenState
                  @ StdGen @ (StateT StdGen m) @ a $dRandomGen_aLKQ $dMonadState_aLKR
[ 8 of 11] Compiling Data.Random.Source ( src/Data/Random/Source.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.4.0/build/Data/Random/Source.o )
[ 9 of 11] Compiling Data.Random.Source.DevRandom ( src/Data/Random/Source/DevRandom.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.4.0/build/Data/Random/Source/DevRandom.o )
[10 of 11] Compiling Data.Random.Source.IO ( src/Data/Random/Source/IO.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.4.0/build/Data/Random/Source/IO.o )
[11 of 11] Compiling Data.Random.Source.MWC ( src/Data/Random/Source/MWC.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.4.0/build/Data/Random/Source/MWC.o )
In-place registering random-source-0.3.0.6...
Installing library in
/Users/lingxiao/.stack/snapshots/x86_64-osx/lts-3.18/7.10.2/lib/x86_64-osx-ghc-7.10.2/random-source-0.3.0.6-EenF8kYQQQ4IXxM5m3qNdi
Registering random-source-0.3.0.6...
